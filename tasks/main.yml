---

- name: install certbot from backports repo
  apt:
    name: certbot
    state: latest
    default_release: "{{ ansible_distribution_release }}-backports"
  when:
    - certbot__install_from_repo
    - ansible_distribution == "Debian" and ansible_distribution_release in ["jessie", 'stretch']

- name: install certbot from repo
  apt:
    name: certbot
    state: latest
  when:
    - certbot__install_from_repo
    - ansible_distribution == "Debian" and ansible_distribution_release not in ["jessie", 'stretch']

- name: create certbot script dir {{ certbot__scriptdir }}
  file:
    path: "{{ certbot__scriptdir }}"
    state: directory
    mode: 0700

- name: create cert gen script {{ certbot__scriptdir }}/certbot.sh
  template:
    src: certbot.j2
    dest: "{{ certbot__scriptdir }}/certbot.sh"
    mode: 0700

- name: copy scripts to {{ certbot__scriptdir }}
  copy:
    src: "{{ item }}"
    dest: "{{ certbot__scriptdir }}/{{ item }}"
    mode: 0700
  with_items: "{{ certbot__scripts }}"

- name: create certs
  command: "{{ certbot__scriptdir }}/certbot.sh"

- name: get list of live certs
  command: "{{ certbot__bin }} certificates"
  register: livecerts
- debug:
    msg: "{{ livecerts.stdout_lines }}"
  when: not ansible_check_mode

# vim: tabstop=2 expandtab shiftwidth=2 softtabstop=2 smartindent nu
